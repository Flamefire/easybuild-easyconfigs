name = 'PyTorch'
version = '2.1.2'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://pytorch.org/'
description = """Tensors and Dynamic neural networks in Python with strong GPU acceleration.
PyTorch is a deep learning framework that puts Python first."""

toolchain = {'name': 'foss', 'version': '2022a'}

source_urls = [GITHUB_RELEASE]
sources = ['%(namelower)s-v%(version)s.tar.gz']
patches = [
    'PyTorch-1.7.0_disable-dev-shm-test.patch',
    'PyTorch-1.11.1_skip-test_init_from_local_shards.patch',
    'PyTorch-1.12.1_add-hypothesis-suppression.patch',
    'PyTorch-1.12.1_fix-test_cpp_extensions_jit.patch',
    'PyTorch-1.12.1_fix-TestTorch.test_to.patch',
    'PyTorch-1.12.1_skip-test_round_robin.patch',
    'PyTorch-1.13.1_fix-gcc-12-warning-in-fbgemm.patch',
    'PyTorch-1.13.1_fix-protobuf-dependency.patch',
    'PyTorch-1.13.1_fix-warning-in-test-cpp-api.patch',
    'PyTorch-1.13.1_skip-failing-singular-grad-test.patch',
    'PyTorch-1.13.1_skip-tests-without-fbgemm.patch',
    'PyTorch-2.0.1_avoid-test_quantization-failures.patch',
    'PyTorch-2.0.1_fix-skip-decorators.patch',
    'PyTorch-2.0.1_fix-ub-in-inductor-codegen.patch',
    'PyTorch-2.0.1_fix-vsx-loadu.patch',
    'PyTorch-2.0.1_no-cuda-stubs-rpath.patch',
    'PyTorch-2.0.1_skip-failing-gradtest.patch',
    'PyTorch-2.0.1_skip-test_shuffle_reproducibility.patch',
    'PyTorch-2.0.1_skip-tests-skipped-in-subprocess.patch',
    'PyTorch-2.1.0_fix-bufferoverflow-in-oneDNN.patch',
    'PyTorch-2.1.0_fix-validationError-output-test.patch',
    'PyTorch-2.1.0_fix-vsx-vector-shift-functions.patch',
    'PyTorch-2.1.0_increase-tolerance-functorch-test_vmapvjpvjp.patch',
    'PyTorch-2.1.0_remove-sparse-csr-nnz-overflow-test.patch',
    'PyTorch-2.1.0_remove-test-requiring-online-access.patch',
    'PyTorch-2.1.0_skip-diff-test-on-ppc.patch',
    'PyTorch-2.1.0_skip-dynamo-test_predispatch.patch',
    'PyTorch-2.1.0_skip-test_jvp_linalg_det_singular.patch',
    'PyTorch-2.1.0_skip-test_linear_fp32-without-MKL.patch',
    'PyTorch-2.1.0_skip-test_wrap_bad.patch',
    'PyTorch-2.1.2_add-cuda-skip-markers.patch',
    'PyTorch-2.1.2_fix-conj-mismatch-test-failures.patch',
    'PyTorch-2.1.2_fix-device-mesh-check.patch',
    ('PyTorch-2.1.2_fix-kineto-cuda-11.7-compat.patch', 'third_party/kineto'),
    'PyTorch-2.1.2_fix-test_extension_backend-without-vectorization.patch',
    'PyTorch-2.1.2_fix-test_memory_profiler.patch',
    'PyTorch-2.1.2_fix-test_torchinductor-rounding.patch',
    'PyTorch-2.1.2_fix-vsx-vector-abs.patch',
    'PyTorch-2.1.2_fix-vsx-vector-div.patch',
    'PyTorch-2.1.2_relax-cuda-tolerances.patch',
    'PyTorch-2.1.2_remove-nccl-backend-default-without-gpus.patch',
    'PyTorch-2.1.2_skip-cpu_repro-test-without-vectorization.patch',
    'PyTorch-2.1.2_skip-failing-test_dtensor_ops-subtests.patch',
    'PyTorch-2.1.2_workaround_dynamo_failure_without_nnpack.patch',
]
checksums = [
    {'pytorch-v2.1.2.tar.gz': '85effbcce037bffa290aea775c9a4bad5f769cb229583450c40055501ee1acd7'},
]

osdependencies = [OS_PKG_IBVERBS_DEV]

builddependencies = [
    ('CMake', '3.23.1'),
    ('hypothesis', '6.46.7'),
    # For tests
    ('pytest-flakefinder', '1.1.0'),
    ('pytest-rerunfailures', '11.1'),
    ('pytest-shard', '0.1.2'),
    ('pytest-xdist', '2.5.0'),
]

dependencies = [
    ('CUDA', '11.7.0', '', SYSTEM),
    ('cuDNN', '8.4.1.50', '-CUDA-%(cudaver)s', SYSTEM),
    ('magma', '2.6.2', '-CUDA-%(cudaver)s'),
    ('NCCL', '2.12.12', '-CUDA-%(cudaver)s'),
    ('Ninja', '1.10.2'),  # Required for JIT compilation of C++ extensions
    ('Python', '3.10.4'),
    ('protobuf', '3.19.4'),
    ('protobuf-python', '3.19.4'),
    ('pybind11', '2.9.2'),
    ('SciPy-bundle', '2022.05'),
    ('typing-extensions', '4.3.0'),
    ('PyYAML', '6.0'),
    ('MPFR', '4.1.0'),
    ('GMP', '6.2.1'),
    ('numactl', '2.0.14'),
    ('FFmpeg', '4.4.2'),
    ('Pillow', '9.1.1'),
    ('expecttest', '0.1.3'),
    ('networkx', '2.8.4'),
    ('sympy', '1.10.1'),
    ('Z3', '4.10.2', '-Python-%(pyver)s'),
]

use_pip = True
buildcmd = '%(python)s setup.py build'  # Run the (long) build in the build step

excluded_tests = {
    '': [
        # This test seems to take too long on NVIDIA Ampere at least.
        'distributed/test_distributed_spawn',
        # Broken on CUDA 11.6/11.7: https://github.com/pytorch/pytorch/issues/75375
        'distributions/test_constraints',
        # no xdoctest
        'doctests',
        # failing on broadwell
        # See https://github.com/easybuilders/easybuild-easyconfigs/issues/17712
        'test_native_mha',
        # intermittent failures on various systems
        # See https://github.com/easybuilders/easybuild-easyconfigs/issues/17712
        'distributed/rpc/test_tensorpipe_agent',
    ]
}

runtest = 'cd test && PYTHONUNBUFFERED=1 %(python)s run_test.py --continue-through-error  --verbose %(excluded_tests)s'

# Especially test_quantization has a few corner cases that are triggered by the random input values,
# those cannot be easily avoided, see https://github.com/pytorch/pytorch/issues/107030
# So allow a low number of tests to fail as the tests "usually" succeed
max_failed_tests = 2

# The readelf sanity check command can be taken out once the TestRPATH test from
# https://github.com/pytorch/pytorch/pull/109493 is accepted, since it is then checked as part of the PyTorch test suite
local_libcaffe2 = "$EBROOTPYTORCH/lib/python%%(pyshortver)s/site-packages/torch/lib/libcaffe2_nvrtc.%s" % SHLIB_EXT
sanity_check_commands = [
    "readelf -d %s | egrep 'RPATH|RUNPATH' | grep -v stubs" % local_libcaffe2,
]

tests = ['PyTorch-check-cpp-extension.py']

moduleclass = 'ai'
